; 非单独使用的程序：只是需要其二进制代码，严禁单独使用。
; 
; 用TASM编译链接
;	tasm my;
;	tlink my;
; 然后改my.exe 为my，用debug装入，移动代码后重写为一个my.bin的文件，重定向到一个文本，取所需数据编辑。
; 
; 本程序试验扩展Int13的扩展读——读出被放在物理硬盘第二扇区的真正主引导记录，
; 然后把控制权交给真正的主引导记录。
;
	.MODEL small
	.386
;
;
	.code
start:
	CLI
	XOR	AX,AX		; AX寄存器清0
	MOV	SS,AX		; SS=0
	MOV	SP,7C00h	; 装填栈指针——SS:SP=0000:7C00
	STI			; 开中断(装填栈指针时为避免硬件中断引起栈混乱应关中断)
	PUSH	AX		; 
	POP	ES		; 装填附加数据段寄存器ES=0
	PUSH	AX		; 
	POP	DS		; 装填数据段寄存器DS=0
	CLD			; 规定其后的串操作为正向串操作
	MOV	SI,7C1Ch	; 源指针————————————注意，RETF前任何指令的修改都会影响这个指针的
	MOV	DI,061Ch	; 目的指针———————————注意，RETF前任何指令的修改都会影响这个指针的
	PUSH	AX		; 
	PUSH	DI		; 构造一个跳转
	MOV	CX,0200h	; 
	REP MOVSB		; 0000:7C1C起始的CX字节传送至0000:061C起始的区域
	RETF			; 跳转到0000:061C(这是一种技巧跳转)
	;下面一段程序利用压栈寄存器方式构造一个磁盘地址包
	XOR	AX,AX
	PUSH	AX
	PUSH	AX
	PUSH	AX
	MOV	AX,0001h	;0002h
	PUSH	AX		; 压栈要读的64位磁盘LAB起始绝对块地址——物理第二扇区
	XOR	AX,AX
	PUSH	AX		; 压栈要读入数据在内存中存放的段址 0000
	MOV	AX,7C00h
	PUSH	AX		; 压栈要读入数据在内存中存放的偏移 7C00h
	MOV	AX,1
	PUSH	AX		; 压栈所要读取的扇区数【要传输的数据块个数(以扇区为单位)】
	MOV	AX,0010h
	PUSH	AX		; 数据包保留字节必须为0，数据包长度必须为16字节。
	MOV	SI,SP		; SI指向磁盘地址包偏移指针，这时SP=7BEA
	MOV	AX,4200h	; 置扩展读功能号
	MOV	DL,80h		; 对本磁盘操作
	INT	13h		; 执行扩展读操作
	JC	_error		; 读错误转
	jmp	_ok

_szMsg	db	'The MRB have been replaced!!! Press any key to continue...'
_szMsgLen	EQU $-_szMsg

_ok:	MOV	SP,7C00h	; 装填栈指针——SS:SP=0000:7C00，多余语句，但是写上放心
	mov	ax,0B800h	; B800h段是计算机引导时默认显示模式下，显存的起始段址
	mov	es,ax
	push	cs
	pop	ds
	mov	si,offset _szMsg; 注意，这里是取不到真正的相对偏移的，我是后来手工改写了编译之后的程序
	xor	di,di
	mov	ah,0Ch		; 规定字符的颜色为红色（还可以追加背景色和是否闪烁的）
	mov	cx,_szMsgLen
_loop:
	lodsb
	stosw			; 这两条指令的配合请仔细揣摩
	loop	_loop		; 显示_szMsg的信息而已
_wait:
	mov	ah,0
	int	16h
	or	al,al
	jz	_wait		; BIOS中断是可以使用的，我们在此暂停，等待一个键盘动作
	xor	ax,ax
	push	ax
	mov	di,7C00h
	push	di		; 老伎俩：构造一个跳转口
	RETF			; 移交控制权给原来的主引导记录
_error:	
	mov	ax,0B800h
	mov	ds,ax
	xor	bx,bx
	mov	ax,0c45h	; 红色的'E'被显示，表明错误出现了
	mov	[bx],ax
	JMP	$		; 死循环
;

	end start





;─────────────────────────────────────────────────────────
;─────────────────────────────────────────────────────────
;下面是为使用压栈方式构造DiskAddressPacket的探索结果
;
;─────────────────────────────────────────────────────────
; 以前分析的主引导记录中“扩展读”分区引导记录部分的代码
;0000:06C5 034608     ADD    AX,[BP+08]    ;
;0000:06C8 13560A     ADC    DX,[BP+0A]    ;执行后，DX:AX=LBA绝对物理扇区号
;
;0000:06E1 33F6       XOR    SI,SI         ;清零
;0000:06E3 56         PUSH   SI            ;
;0000:06E4 56         PUSH   SI            ;
;0000:06E5 52         PUSH   DX            ;
;0000:06E6 50         PUSH   AX            ;以上四条指令压栈的是扇区LBA号
;0000:06E7 06         PUSH   ES            ;压栈内存目标缓冲区首址段址
;0000:06E8 53         PUSH   BX            ;压栈内存目标缓冲区首址偏移
;0000:06E9 51         PUSH   CX            ;压栈所读扇区数
;0000:06EA BE1000     MOV    SI,0010       ;注意SI的高8位对应着磁盘地址包的保留字节，必须为0
;0000:06ED 56         PUSH   SI            ;压栈磁盘地址包包长，执行完本条指令一个包已经构造完毕
;0000:06EE 8BF4       MOV    SI,SP         ;磁盘地址包偏移指针
;
;─────────────────────────────────────────────────────────
; 资料中关于DiskAddressPacket结构
;DiskAddressPacket	struct
;	PacketSize	db	16
;	Reserved	db	0
;	BlockCount	dw	1
;	BufferAddr	dd	00007c00h		;段:偏移——0000:7C00
;	BlockNum	dq	2
;DiskAddressPacket	ends
;
; 上面的磁盘地址包结构在编译后的情形（Test.lst）
; 00000010			DiskAddressPacket	struct
; 00000000  10				PacketSize	db	16
; 00000001  00				Reserved	db	0
; 00000002  0001			BlockCount	dw	1		;内存中01是低址
; 00000004  7C000000			BufferAddr	dd	00007C00h	;内存中是7C00在低址，其中7C00里的00最低
; 00000008  0000000000000002		BlockNum	dq	2		;内存中02在低址
;				DiskAddressPacket	ends
;
;
;─────────────────────────────────────────────────────────
; 结构体在内存中实际状态（TD32跟踪Test.exe得到）
; :00403003 10 00 01 00 00 7C 00 00 02 00 00 00 00 00 00 00
;
;─────────────────────────────────────────────────────────
; 本程序（My.exe）在Debug下动态跟踪后产生的磁盘地址包
;
;13C7:063B CD13          INT     13
;-d ds:7bf0
;        包尺寸.留.扇区数.偏移. 段址 .L B A 物 理 扇 区 号’
;13C7:7BF0  10 00 01 00 00 7C 00 00-02 00 00 00 00 00 00 00   .....|..........	;16字节磁盘地址包
;13C7:7C00  FA 33 C0 8E D0 BC 00 7C-FB 50 07 50 1F FC BE 1C   .3.....|.P.P....	;这和下面的是本程序代码
;13C7:7C10  7C BF 1C 06 50 57 B9 00-01 F3 A4 CB 33 C0 50 50   |...PW......3.PP
;13C7:7C20  50 B8 02 00 50 33 C0 50-B8 00 7C 50 B8 01 00 50   P...P3.P..|P...P
;13C7:7C30  B8 10 00 50 8B F4 B8 00-42 B2 80 CD 13 73 04 90   ...P....B....s..
;13C7:7C40  90 EB FE BF 00 7C FF E7-EB FE 6C 00 00 00 00 00   .....|....l.....
;13C7:7C50  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00   ................
