;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
DLG_OPTION			equ	2
IDC_LEVEL     		equ  	200
IDC_LEVELNO			equ	201
IDC_FORCE			equ	202
IDC_BACKUP			equ	203
IDC_OVERLAY_COPY 	equ 	204
IDC_OVERLAY_STRIP equ 	205
IDC_OVERLAY_SKIP 	equ  	206
IDC_EXPORTS_COM   equ	207
IDC_EXPORTS_NCOM 	equ	208
IDC_ICON_FIRSTD   equ 	209
IDC_ICON_FIRSTI   equ 	210
IDC_ICON_NCOM		equ	211
IDC_RELOCS_STRIP  equ	212
IDC_RELOCS_NSTRIP equ	213


;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
		.data?

hWinOption		dd	?
hTBLevel			dd	?
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
		.data
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


		.code
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
_InitOption	proc
		LOCAL @szBuffer[32]:BYTE
;********************************************************************		
		;压缩等级
		invoke	SendDlgItemMessage, hWinOption, IDC_LEVEL, TBM_SETRANGEMIN, NULL, 1
		invoke	SendDlgItemMessage, hWinOption, IDC_LEVEL, TBM_SETRANGEMAX, NULL, 9

		invoke	GetPrivateProfileInt, addr szSection, addr szKeyCL, 7, addr szBufIniName
		
		invoke	SendDlgItemMessage, hWinOption, IDC_LEVEL, TBM_SETPOS, TRUE, eax
		invoke	SendDlgItemMessage, hWinOption, IDC_LEVEL, TBM_GETPOS, NULL, NULL
		invoke	SetDlgItemInt, hWinOption, IDC_LEVELNO, eax, FALSE		
;********************************************************************
		;强迫压缩
		invoke	GetPrivateProfileInt, addr szSection, addr szkeyForce, 0, addr szBufIniName
		.if eax == 1
			
			invoke	CheckDlgButton, hWinOption, IDC_FORCE, BST_CHECKED	
			
		.elseif eax == 0
		   ;0：为不强迫压缩 ， 1：为强迫压缩
		.else
			invoke MessageBox, NULL, addr szText1, addr szErrCaption, MB_OK
			invoke	EndDialog,hWinOption,NULL

		.endif
;********************************************************************
		;备份程序
		invoke	GetPrivateProfileInt, addr szSection, addr szKeyBackUp, 0, addr szBufIniName
		.if eax == 1
			
			invoke	CheckDlgButton, hWinOption, IDC_BACKUP, BST_CHECKED
			
		.elseif eax == 0
		;  0：为不备份程序 ， 1：为备份程序	
		.else
			invoke MessageBox, NULL, addr szText1, addr szErrCaption, MB_OK
			invoke	EndDialog,hWinOption,NULL
			
		.endif

;********************************************************************
		;覆盖
		invoke	GetPrivateProfileString,addr szSection,\
			addr szKeyOverLay, addr szValueOverLayC,addr @szBuffer,\
			sizeof @szBuffer,addr szBufIniName
			
		invoke lstrcmp, addr @szBuffer, addr szValueOverLayC
		.if eax == 0
			invoke	CheckDlgButton, hWinOption, IDC_OVERLAY_COPY, BST_CHECKED
		.endif
		
		invoke lstrcmp, addr @szBuffer, addr szValueOverLayST
		.if eax == 0
			invoke	CheckDlgButton, hWinOption, IDC_OVERLAY_STRIP, BST_CHECKED
		.endif
		
		invoke lstrcmp, addr @szBuffer, addr szValueOverLaySK
		.if eax == 0
			invoke	CheckDlgButton, hWinOption, IDC_OVERLAY_SKIP, BST_CHECKED
		.endif
		
;********************************************************************
		;输出节
		invoke	GetPrivateProfileString,addr szSection,\
			addr szkeyExport, addr szValueExport,addr @szBuffer,\
			sizeof @szBuffer,addr szBufIniName
			
		invoke lstrcmp, addr @szBuffer, addr szValueExport
		.if eax == 0
			invoke	CheckDlgButton, hWinOption, IDC_EXPORTS_COM, BST_CHECKED
		.endif
		
		invoke lstrcmp, addr @szBuffer, addr szValueExportN
		.if eax == 0
			invoke	CheckDlgButton, hWinOption, IDC_EXPORTS_NCOM, BST_CHECKED
		.endif
		
;********************************************************************
		;图标
		
		invoke	GetPrivateProfileString,addr szSection,\
			addr szKeyIcon, addr szValueIconsFD,addr @szBuffer,\
			sizeof @szBuffer,addr szBufIniName
			
		invoke lstrcmp, addr @szBuffer, addr szValueIconsN
		.if eax == 0
			invoke	CheckDlgButton, hWinOption, IDC_ICON_NCOM, BST_CHECKED
		.endif
		
		invoke lstrcmp, addr @szBuffer, addr szValueIconsFI
		.if eax == 0
			invoke	CheckDlgButton, hWinOption, IDC_ICON_FIRSTI, BST_CHECKED
		.endif
		
		invoke lstrcmp, addr @szBuffer, addr szValueIconsFD
		.if eax == 0
			invoke	CheckDlgButton, hWinOption, IDC_ICON_FIRSTD, BST_CHECKED
		.endif

;********************************************************************
		;重定位
		
		invoke	GetPrivateProfileString,addr szSection,\
			addr szKeyRelocs, addr szValueRelocs,addr @szBuffer,\
			sizeof @szBuffer,addr szBufIniName
			
		invoke lstrcmp, addr @szBuffer, addr szValueRelocsN
		.if eax == 0
			invoke	CheckDlgButton, hWinOption, IDC_RELOCS_NSTRIP, BST_CHECKED
		.endif
		
		invoke lstrcmp, addr @szBuffer, addr szValueRelocs
		.if eax == 0
			invoke	CheckDlgButton, hWinOption, IDC_RELOCS_STRIP, BST_CHECKED
		.endif
		 

		ret
_InitOption	endp
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

_SaveIniFile	proc
		LOCAL @szBuffer[32]:BYTE
;********************************************************************		

		invoke	SendDlgItemMessage, hWinOption, IDC_LEVEL, TBM_GETPOS, NULL, NULL

		invoke	wsprintf,addr @szBuffer,addr szFmt1, eax            ;压缩等级         
		invoke	WritePrivateProfileString,addr szSection,\
				addr szKeyCL,addr @szBuffer,addr szBufIniName
;********************************************************************		

		invoke	IsDlgButtonChecked,hWinOption,IDC_FORCE
			.if	eax == BST_CHECKED
				mov	eax, 1
				
			.else
				mov 	eax, 0
				
			.endif
				
		invoke	wsprintf,addr @szBuffer,addr szFmt1, eax           ;  0：为不强迫压缩 ， 1：为强迫压缩		
		invoke	WritePrivateProfileString, addr szSection,\
				addr szkeyForce, addr @szBuffer, addr szBufIniName
;********************************************************************		

		invoke	IsDlgButtonChecked,hWinOption,IDC_BACKUP
			.if	eax == BST_CHECKED
				mov	eax, 1
				
			.else
				mov 	eax, 0
				
			.endif
				
		invoke	wsprintf,addr @szBuffer,addr szFmt1, eax            ;  0：为不备份程序 ， 1：为备份程序		
		invoke	WritePrivateProfileString, addr szSection,\
				addr szKeyBackUp, addr @szBuffer, addr szBufIniName
;********************************************************************						
				
		invoke	IsDlgButtonChecked, hWinOption, IDC_OVERLAY_COPY
			.if	eax == BST_CHECKED
				invoke lstrcpy, addr @szBuffer, addr szValueOverLayC
								
			.endif
			
		invoke	IsDlgButtonChecked, hWinOption, IDC_OVERLAY_STRIP
			.if	eax == BST_CHECKED
				invoke lstrcpy, addr @szBuffer, addr szValueOverLayST
								
			.endif
			
		invoke	IsDlgButtonChecked, hWinOption, IDC_OVERLAY_SKIP
			.if	eax == BST_CHECKED
				invoke lstrcpy, addr @szBuffer, addr szValueOverLaySK
								
			.endif
			
 		
		invoke	WritePrivateProfileString, addr szSection,\      ;  覆盖
				addr szKeyOverLay, addr @szBuffer, addr szBufIniName
;********************************************************************	

		invoke	IsDlgButtonChecked, hWinOption, IDC_EXPORTS_COM
			.if	eax == BST_CHECKED
				invoke lstrcpy, addr @szBuffer, addr szValueExport
								
			.endif
			
		invoke	IsDlgButtonChecked, hWinOption, IDC_EXPORTS_NCOM
			.if	eax == BST_CHECKED
				invoke lstrcpy, addr @szBuffer, addr szValueExportN
								
			.endif

		invoke	WritePrivateProfileString, addr szSection,\      ;  输出节
				addr szkeyExport, addr @szBuffer, addr szBufIniName
;********************************************************************		

				
		invoke	IsDlgButtonChecked, hWinOption, IDC_ICON_FIRSTD
			.if	eax == BST_CHECKED
				invoke lstrcpy, addr @szBuffer, addr szValueIconsFD
								
			.endif
			
		invoke	IsDlgButtonChecked, hWinOption, IDC_ICON_FIRSTI
			.if	eax == BST_CHECKED
				invoke lstrcpy, addr @szBuffer, addr szValueIconsFI
								
			.endif
			
		invoke	IsDlgButtonChecked, hWinOption, IDC_ICON_NCOM
			.if	eax == BST_CHECKED
				invoke lstrcpy, addr @szBuffer, addr szValueIconsN
								
			.endif

		invoke	WritePrivateProfileString, addr szSection,\      ;  图标
				addr szKeyIcon, addr @szBuffer, addr szBufIniName
;********************************************************************		

		invoke	IsDlgButtonChecked, hWinOption, IDC_RELOCS_STRIP
			.if	eax == BST_CHECKED
				invoke lstrcpy, addr @szBuffer, addr szValueRelocs
								
			.endif
			
		invoke	IsDlgButtonChecked, hWinOption, IDC_RELOCS_NSTRIP
			.if	eax == BST_CHECKED
				invoke lstrcpy, addr @szBuffer, addr szValueRelocsN
								
			.endif

		invoke	WritePrivateProfileString, addr szSection,\      ;  重定位
				addr szKeyRelocs, addr @szBuffer, addr szBufIniName
		
		
	ret
_SaveIniFile	endp

;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
		
_ProcDlgOption	proc	uses ebx edi esi hOption_Wnd,wMsg,wParam,lParam
		mov	eax,wMsg
		.if	eax == WM_CLOSE
			
			invoke	EndDialog,hOption_Wnd,NULL
			
		.elseif	eax == WM_INITDIALOG
;********************************************************************			
			mov	eax, hOption_Wnd
			mov	hWinOption, eax
			invoke	LoadIcon,hInstance,ICO_MAIN
			invoke	SendMessage, hOption_Wnd, WM_SETICON, ICON_BIG, eax
			
			invoke	_InitOption			
			
		.elseif	eax == WM_HSCROLL
		   invoke	SendDlgItemMessage, hOption_Wnd, IDC_LEVEL, TBM_GETPOS, NULL, NULL
		   invoke	SetDlgItemInt, hOption_Wnd, IDC_LEVELNO, eax, FALSE

;********************************************************************
		.elseif	eax == WM_COMMAND
			mov	eax,wParam
			.if	ax ==	IDOK    			
				invoke	_SaveIniFile
				invoke	EndDialog,hOption_Wnd,NULL

;********************************************************************
			.elseif	ax ==	IDCANCEL      ;
			
				invoke	EndDialog,hOption_Wnd,NULL
 
			.endif
;********************************************************************
		.else
			mov	eax,FALSE
			ret
		.endif
		mov	eax,TRUE
		ret

_ProcDlgOption endp
