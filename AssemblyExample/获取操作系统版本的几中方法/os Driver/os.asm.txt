			.386
			.model flat, stdcall
			option casemap:none
include 		ntstatus.inc
include 		ntddk.inc
include		ntoskrnl.inc
includelib		ntoskrnl.lib
include 		hal.inc
includelib 		hal.lib

			.const
szInfo		db	"Your OS version is ",0
szXP			db 	"Windows XP ",0
szNT4			db 	"Windows NT 4.0",0
szVista		db	"Windows Vista",0
sz2000		db 	"Windows 2000 ",0
sz2003		db 	"Windows Server 2003 Sevice ",0
szFormat		db	"Bulid %d",0

			.data
dwMajorVersion	dd	0
dwMinVersion	dd	0
dwBuildNumber	dd	0
usz			dw	256 dup(0)
usCSDVersion	UNICODE_STRING	{sizeof usz-2, sizeof usz,offset usz}

			.code
DriverEntry proc pDriverObject:PDRIVER_OBJECT, pusRegistryPath:PUNICODE_STRING
	
	invoke 	DbgPrint,addr szInfo
	
	invoke	PsGetVersion,addr dwMajorVersion,addr dwMinVersion,addr dwBuildNumber,addr usCSDVersion
	.if	dwMajorVersion == 4
		invoke 	DbgPrint,addr szNT4
	.elseif	dwMajorVersion == 5
		.if	dwMinVersion == 0
			invoke 	DbgPrint,addr sz2000
		.elseif	dwMinVersion == 1
			invoke 	DbgPrint,addr szXP
		.elseif	dwMinVersion == 2
			invoke 	DbgPrint,addr sz2003
		.endif
	.elseif	dwMajorVersion == 6 && dwMinVersion == 0
		invoke 	DbgPrint,addr szVista
	.endif
	
	invoke 	DbgPrint,addr szFormat,dwBuildNumber

	mov 	eax, STATUS_DEVICE_CONFIGURATION_ERROR
	ret

DriverEntry endp

end DriverEntry                   