Microsoft (R) Macro Assembler Version 6.11		    05/29/08 22:51:13
sold.asm						     Page 1 - 1


				;*****************************************************************************
				;*DOS下重新启动/关机的代码。也是一个简单的处理输入参数的例子                 *
				;*                                                                           *
				;*下面是文件的原始头信息                                                     *
				;* ShutDown v1.2 written by BlackLight 2001                                  *
				;* Download my other software from my website at www.blacklight.wxs.org      *
				;* assemble this prog with the MAGIC ASSEMBLER by Magic Software Rotterdam   * 
				;* Download it here (freeware):                                              *
				;* http://www.math.leidenuniv.nl/~bgreeven                                   *
				;* http://www.caiw.nl/~bert                                                  *
				;*                                                                           *
				;* What's new?                                                               *
				;* v1.2 - added smartdrive flush                                             *
				;* v1.1 - added command-line parameter support                               *
				;* v1.0 - first version                                                      *
				;*****************************************************************************
				.model Tiny
 0000				.data
 0000 54 68 69 73 20 70		WinErr      db   'This program cannot be run under Windows.',0ah,0dh,'$'
       72 6F 67 72 61 6D
       20 63 61 6E 6E 6F
       74 20 62 65 20 72
       75 6E 20 75 6E 64
       65 72 20 57 69 6E
       64 6F 77 73 2E 0A
       0D 24
 002C 53 68 75 74 44 6F		Txt         db   'ShutDown v1.2 www.blacklight.wxs.org',0ah,0dh,'$'
       77 6E 20 76 31 2E
       32 20 77 77 77 2E
       62 6C 61 63 6B 6C
       69 67 68 74 2E 77
       78 73 2E 6F 72 67
       0A 0D 24
 0053 53 79 6E 74 61 78		SyntaxTxt   db   'Syntax: SHUTDOWN [S(hutdown)|R(estart)]',0ah,0dh,'$'
       3A 20 53 48 55 54
       44 4F 57 4E 20 5B
       53 28 68 75 74 64
       6F 77 6E 29 7C 52
       28 65 73 74 61 72
       74 29 5D 0A 0D 24
 007D 53 28 68 75 74 64		Question    db   'S(hutdown), R(estart), or C(ancel)? $'
       6F 77 6E 29 2C 20
       52 28 65 73 74 61
       72 74 29 2C 20 6F
       72 20 43 28 61 6E
       63 65 6C 29 3F 20
       24
 00A2 43 6F 75 6C 64 20		NoATX       db   'Could not shutdown! No ATX maybe?$',0ah,0dh
       6E 6F 74 20 73 68
       75 74 64 6F 77 6E
       21 20 4E 6F 20 41
       54 58 20 6D 61 79
       62 65 3F 24 0A 0D
 00C6 53			KeyOff      db   'S'
 00C7 52			KeyRes      db   'R'
 00C8 43			KeyCan      db   'C'
 00C9 1B			KeyEsc      db   27
 00CA 0A 00 24			CrLf        db   0ah,0d,'$'
 00CD 46 6C 75 73 68 69		FlushMsg1   db   'Flushing SMARTDRV buffers...$'
       6E 67 20 53 4D 41
       52 54 44 52 56 20
       62 75 66 66 65 72
       73 2E 2E 2E 24
 00EA 64 6F 6E 65 0A 0D		FlushMsg2   db   'done',0ah,0dh,'$'
       24
 0000				.code
 0000  B4 09			Syntax:     mov  ah,9h
 0002  BA 0053 R		            mov  dx,offset SyntaxTxt
 0005  CD 21			            int  21h
 0007  E9 014A			            jmp  Exit

 000A  B4 09			NoPars:     mov  ah,9h                     ;Show question
 000C  BA 007D R		            mov  dx,offset(Question)
 000F  CD 21			            int  21h

 0011  32 E4			DoAsk:      xor  ah,ah                    ;Ask for key
 0013  CD 16			            int  16h

 0015  3A 06 00C9 R		            cmp  al,KeyEsc                ;Check if 'Esc'-key pressed
 0019  75 03 E9 0133		            je   DoCan
 001E  24 DF			            and  al,0DFh                    ;convert AL to uppercase

 0020  3A 06 00C6 R		            cmp  al,KeyOff                ;Check if 'S'-key pressed
 0024  75 03 E9 0123		            je   DoOff

 0029  3A 06 00C7 R		            cmp  al,KeyRes                ;Check if 'R'-key pressed
 002D  75 03 E9 010F		            je   DoRes

 0032  3A 06 00C8 R		            cmp  al,KeyCan                ;Check if 'C'-key pressed
 0036  75 03 E9 0116		            je   DoCan

 003B  EB D4			            jmp DoAsk                   ;Invalid key pressed, ask again...

 003D  B4 02			ShowKey:    mov  ah,2h                     ;Show the pressed key
 003F  8A D0			            mov  dl,al
 0041  CD 21			            int  21h
 0043  B4 09			            mov  ah,9h                     ;Show CrLf
 0045  BA 00CA R		            mov  dx,offset(CrLf)
 0048  CD 21			            int  21h
 004A  C3			            ret                           ;return

				.startup
 0100  B8 160A			            mov  ax,160ah                  ;check for Windows
 0103  CD 2F			            int  2fh
 0105  83 F8 00			            cmp  ax,0000
 0108  75 09			            jne  NoWin
 010A  BA 0000 R		            mov  dx,offset(WinErr)        ;print error message
 010D  B4 09			            mov  ah,9h
 010F  CD 21			            int  21h
 0111  EB 41			            jmp  Exit
 0113				NoWin:      
 0113  B4 09			            mov  ah,9h                     ;Show program name
 0115  BA 002C R		            mov  dx,offset(Txt)
 0118  CD 21			            int  21h

 011A  BE 0081			            mov  si,81h
 011D  8A 04			            mov  al,[si]
 011F  3C 0D			            cmp  al,0Dh                ;Check if any parameters given
 0121  75 03 E9 FEE4		            jz   NoPars

 0126  BE 0081			            mov  si,81h                    ;get parameters
 0129  AC			ParLoop:    lodsb
 012A  3C 00			            cmp  al,0d                    ;if end reached with no result
 012C  75 03 E9 FECF		            je   Syntax                  ;   show syntax
 0131  24 DF			            and  al,0DFh                    ;convert AL to uppercase
 0133  3A 06 00C6 R		            cmp  al,KeyOff                ;check for S parameter
 0137  74 16			            je   DoOffW
 0139  3A 06 00C7 R		            cmp  al,KeyRes                ;check for R parameter
 013D  74 05			            je   DoResW
 013F  EB E8			            jmp ParLoop                 ;not recognized,goto next char.

 0141  E8 FEF9			DoRes:      call ShowKey
 0144  E8 0036			DoResW:    call FlushSD
 0147  EA			        db  0EAh
 0148  0000			        dw  00000
 014A  FFFF			        dw  0FFFFh            ; jmpf ffff:0000 this instruction will reboot the
				                                          ;computer
 014C  E8 FEEE			DoOff:      call ShowKey
 014F  EB 07			DoOffW:     jmp  ATXOff

 0151  E8 FEE9			DoCan:      call ShowKey
 0154				Exit:
				.exit     ;exit to DOS


 0158  E8 0022			ATXOff:     call FlushSD                 ;flush smartdrive cache
 015B  B8 5301			            mov  ax,5301h           ;Function 5301h: APM ?Connect real-mode interface
 015E  33 DB			            xor  bx,bx             ;Device ID:      0000h (=system BIOS)
 0160  CD 15			            int  15h                ;Call interrupt: 15h

 0162  B8 530E			            mov  ax,530eh           ;Function 530Eh: APM ?Driver version
 0165  B9 0102			            mov  cx,0102h           ;Driver version: APM v1.2
 0168  CD 15			            int  15h                ;Call interrupt: 15h

 016A  B8 5307			            mov  ax,5307h           ;Function 5307h: APM ?Set system power state
 016D  B3 01			            mov  bl,01h             ;Device ID:      0001h (=All devices)
 016F  B9 0003			            mov  cx,0003h           ;Power State:    0003h (=Off)
 0172  CD 15			            int  15h                ;Call interrupt: 15h

				            ;if the program is still running here, there was an error...
 0174  B4 09			            mov  ah,9h
 0176  BA 00A2 R		            mov  dx,offset(NoATX)
 0179  CD 21			            int  21h

 017B  EB D7			            jmp Exit



 017D  B4 09			FlushSD:    mov  ah,9h
 017F  BA 00CD R		            mov  dx,offset(FlushMsg1)
 0182  CD 21			            int  21h
 0184  B8 4A10			            mov  ax,4A10h       ;flush smartdrv/pccache buffers
 0187  BB 0001			            mov  bx,1h
 018A  CD 1A			            int  1Ah
 018C  B4 09			            mov  ah,9h
 018E  BA 00EA R		            mov  dx,offset(FlushMsg2)
 0191  CD 21			            int  21h
 0193  C3			            ret
				end
Microsoft (R) Macro Assembler Version 6.11		    05/29/08 22:51:13
sold.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_TEXT  . . . . . . . . . . . . .	16 Bit	 0194	  Word	  Public  'CODE'	
_DATA  . . . . . . . . . . . . .	16 Bit	 00F1	  Word	  Public  'DATA'	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0000h	 
@Model . . . . . . . . . . . . .	Number	 0001h	 
@Startup . . . . . . . . . . . .	L Near	 0100	  _TEXT	
@code  . . . . . . . . . . . . .	Text   	 DGROUP
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
ATXOff . . . . . . . . . . . . .	L Near	 0158	  _TEXT	
CrLf . . . . . . . . . . . . . .	Byte	 00CA	  _DATA	
DoAsk  . . . . . . . . . . . . .	L Near	 0011	  _TEXT	
DoCan  . . . . . . . . . . . . .	L Near	 0151	  _TEXT	
DoOffW . . . . . . . . . . . . .	L Near	 014F	  _TEXT	
DoOff  . . . . . . . . . . . . .	L Near	 014C	  _TEXT	
DoResW . . . . . . . . . . . . .	L Near	 0144	  _TEXT	
DoRes  . . . . . . . . . . . . .	L Near	 0141	  _TEXT	
Exit . . . . . . . . . . . . . .	L Near	 0154	  _TEXT	
FlushMsg1  . . . . . . . . . . .	Byte	 00CD	  _DATA	
FlushMsg2  . . . . . . . . . . .	Byte	 00EA	  _DATA	
FlushSD  . . . . . . . . . . . .	L Near	 017D	  _TEXT	
KeyCan . . . . . . . . . . . . .	Byte	 00C8	  _DATA	
KeyEsc . . . . . . . . . . . . .	Byte	 00C9	  _DATA	
KeyOff . . . . . . . . . . . . .	Byte	 00C6	  _DATA	
KeyRes . . . . . . . . . . . . .	Byte	 00C7	  _DATA	
NoATX  . . . . . . . . . . . . .	Byte	 00A2	  _DATA	
NoPars . . . . . . . . . . . . .	L Near	 000A	  _TEXT	
NoWin  . . . . . . . . . . . . .	L Near	 0113	  _TEXT	
ParLoop  . . . . . . . . . . . .	L Near	 0129	  _TEXT	
Question . . . . . . . . . . . .	Byte	 007D	  _DATA	
ShowKey  . . . . . . . . . . . .	L Near	 003D	  _TEXT	
SyntaxTxt  . . . . . . . . . . .	Byte	 0053	  _DATA	
Syntax . . . . . . . . . . . . .	L Near	 0000	  _TEXT	
Txt  . . . . . . . . . . . . . .	Byte	 002C	  _DATA	
WinErr . . . . . . . . . . . . .	Byte	 0000	  _DATA	

	   0 Warnings
	   0 Errors
