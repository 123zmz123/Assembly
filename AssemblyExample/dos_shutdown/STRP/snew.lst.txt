Microsoft (R) Macro Assembler Version 6.11		    05/29/08 23:04:44
snew.asm						     Page 1 - 1


				;*****************************************************************************
				;*DOS下重新启动/关机的代码。也是一个简单的处理输入参数的例子                 *
				;*                                                                           *
				;*下面是文件的原始头信息                                                     *
				;* ShutDown v1.2 written by BlackLight 2001                                  *
				;* Download my other software from my website at www.blacklight.wxs.org      *
				;* assemble this prog with the MAGIC ASSEMBLER by Magic Software Rotterdam   * 
				;* Download it here (freeware):                                              *
				;* http://www.math.leidenuniv.nl/~bgreeven                                   *
				;* http://www.caiw.nl/~bert                                                  *
				;*                                                                           *
				;* What's new?                                                               *
				;* v1.2 - added smartdrive flush                                             *
				;* v1.1 - added command-line parameter support                               *
				;* v1.0 - first version                                                      *
				;*****************************************************************************
				.model Tiny
 0000				.data
 0000 54 68 69 73 20 70		WinErr      db   'This program cannot be run under Windows.',0ah,0dh,'$'
       72 6F 67 72 61 6D
       20 63 61 6E 6E 6F
       74 20 62 65 20 72
       75 6E 20 75 6E 64
       65 72 20 57 69 6E
       64 6F 77 73 2E 0A
       0D 24
 002C 53 68 75 74 44 6F		Txt         db   'ShutDown v1.2 www.blacklight.wxs.org',0ah,0dh,'$'
       77 6E 20 76 31 2E
       32 20 77 77 77 2E
       62 6C 61 63 6B 6C
       69 67 68 74 2E 77
       78 73 2E 6F 72 67
       0A 0D 24
 0053 53 79 6E 74 61 78		SyntaxTxt   db   'Syntax: SHUTDOWN [S(hutdown)|R(estart)]',0ah,0dh,'$'
       3A 20 53 48 55 54
       44 4F 57 4E 20 5B
       53 28 68 75 74 64
       6F 77 6E 29 7C 52
       28 65 73 74 61 72
       74 29 5D 0A 0D 24
 007D 53 28 68 75 74 64		Question    db   'S(hutdown), R(estart), or C(ancel)? $'
       6F 77 6E 29 2C 20
       52 28 65 73 74 61
       72 74 29 2C 20 6F
       72 20 43 28 61 6E
       63 65 6C 29 3F 20
       24
 00A2 43 6F 75 6C 64 20		NoATX       db   'Could not shutdown! No ATX maybe?$',0ah,0dh
       6E 6F 74 20 73 68
       75 74 64 6F 77 6E
       21 20 4E 6F 20 41
       54 58 20 6D 61 79
       62 65 3F 24 0A 0D
 00C6 53			KeyOff      db   'S'
 00C7 52			KeyRes      db   'R'
 00C8 43			KeyCan      db   'C'
 00C9 1B			KeyEsc      db   27
 00CA 0A 00 24			CrLf        db   0ah,0d,'$'
 00CD 46 6C 75 73 68 69		FlushMsg1   db   'Flushing SMARTDRV buffers...$'
       6E 67 20 53 4D 41
       52 54 44 52 56 20
       62 75 66 66 65 72
       73 2E 2E 2E 24
 00EA 64 6F 6E 65 0A 0D		FlushMsg2   db   'done',0ah,0dh,'$'
       24
 0000				.code
				.startup 
 0100  EB 3F			            jmp  realstart   
 0102  B4 09			Syntax:     mov  ah,9h
 0104  BA 0053 R		            mov  dx,offset SyntaxTxt
 0107  CD 21			            int  21h
 0109  E9 0083			            jmp  Exit

 010C  B4 09			NoPars:     mov  ah,9h                     ;Show question
 010E  BA 007D R		            mov  dx,offset(Question)
 0111  CD 21			            int  21h

 0113  32 E4			DoAsk:      xor  ah,ah                    ;Ask for key
 0115  CD 16			            int  16h

 0117  3A 06 00C9 R		            cmp  al,KeyEsc                ;Check if 'Esc'-key pressed
 011B  74 6F			            je   DoCan
 011D  24 DF			            and  al,0DFh                    ;convert AL to uppercase

 011F  3A 06 00C6 R		            cmp  al,KeyOff                ;Check if 'S'-key pressed
 0123  74 62			            je   DoOff

 0125  3A 06 00C7 R		            cmp  al,KeyRes                ;Check if 'R'-key pressed
 0129  74 51			            je   DoRes

 012B  3A 06 00C8 R		            cmp  al,KeyCan                ;Check if 'C'-key pressed
 012F  74 5B			            je   DoCan

 0131  EB E0			            jmp DoAsk                   ;Invalid key pressed, ask again...

 0133  B4 02			ShowKey:    mov  ah,2h                     ;Show the pressed key
 0135  8A D0			            mov  dl,al
 0137  CD 21			            int  21h
 0139  B4 09			            mov  ah,9h                     ;Show CrLf
 013B  BA 00CA R		            mov  dx,offset(CrLf)
 013E  CD 21			            int  21h
 0140  C3			            ret                           ;return

 0141				realstart:
 0141  B8 160A			            mov  ax,160ah                  ;check for Windows
 0144  CD 2F			            int  2fh
 0146  83 F8 00			            cmp  ax,0000
 0149  75 09			            jne  NoWin
 014B  BA 0000 R		            mov  dx,offset(WinErr)        ;print error message
 014E  B4 09			            mov  ah,9h
 0150  CD 21			            int  21h
 0152  EB 3B			            jmp  Exit
 0154				NoWin:      
 0154  B4 09			            mov  ah,9h                     ;Show program name
 0156  BA 002C R		            mov  dx,offset(Txt)
 0159  CD 21			            int  21h

 015B  BE 0081			            mov  si,81h
 015E  8A 04			            mov  al,[si]
 0160  3C 0D			            cmp  al,0Dh                ;Check if any parameters given
 0162  74 A8			            jz   NoPars

 0164  BE 0081			            mov  si,81h                    ;get parameters
 0167  AC			ParLoop:    lodsb
 0168  3C 00			            cmp  al,0d                    ;if end reached with no result
 016A  74 96			            je   Syntax                  ;   show syntax
 016C  24 DF			            and  al,0DFh                    ;convert AL to uppercase
 016E  3A 06 00C6 R		            cmp  al,KeyOff                ;check for S parameter
 0172  74 16			            je   DoOffW
 0174  3A 06 00C7 R		            cmp  al,KeyRes                ;check for R parameter
 0178  74 05			            je   DoResW
 017A  EB EB			            jmp ParLoop                 ;not recognized,goto next char.

 017C  E8 FFB4			DoRes:      call ShowKey
 017F  E8 0036			DoResW:    call FlushSD
 0182  EA			        db  0EAh
 0183  0000			        dw  00000
 0185  FFFF			        dw  0FFFFh            ; jmpf ffff:0000 this instruction will reboot the
				                                          ;computer
 0187  E8 FFA9			DoOff:      call ShowKey
 018A  EB 07			DoOffW:     jmp  ATXOff

 018C  E8 FFA4			DoCan:      call ShowKey
 018F				Exit:
				.exit     ;exit to DOS


 0193  E8 0022			ATXOff:     call FlushSD                 ;flush smartdrive cache
 0196  B8 5301			            mov  ax,5301h           ;Function 5301h: APM ?Connect real-mode interface
 0199  33 DB			            xor  bx,bx             ;Device ID:      0000h (=system BIOS)
 019B  CD 15			            int  15h                ;Call interrupt: 15h

 019D  B8 530E			            mov  ax,530eh           ;Function 530Eh: APM ?Driver version
 01A0  B9 0102			            mov  cx,0102h           ;Driver version: APM v1.2
 01A3  CD 15			            int  15h                ;Call interrupt: 15h

 01A5  B8 5307			            mov  ax,5307h           ;Function 5307h: APM ?Set system power state
 01A8  B3 01			            mov  bl,01h             ;Device ID:      0001h (=All devices)
 01AA  B9 0003			            mov  cx,0003h           ;Power State:    0003h (=Off)
 01AD  CD 15			            int  15h                ;Call interrupt: 15h

				            ;if the program is still running here, there was an error...
 01AF  B4 09			            mov  ah,9h
 01B1  BA 00A2 R		            mov  dx,offset(NoATX)
 01B4  CD 21			            int  21h

 01B6  EB D7			            jmp Exit



 01B8  B4 09			FlushSD:    mov  ah,9h
 01BA  BA 00CD R		            mov  dx,offset(FlushMsg1)
 01BD  CD 21			            int  21h
 01BF  B8 4A10			            mov  ax,4A10h       ;flush smartdrv/pccache buffers
 01C2  BB 0001			            mov  bx,1h
 01C5  CD 1A			            int  1Ah
 01C7  B4 09			            mov  ah,9h
 01C9  BA 00EA R		            mov  dx,offset(FlushMsg2)
 01CC  CD 21			            int  21h
 01CE  C3			            ret
				end
Microsoft (R) Macro Assembler Version 6.11		    05/29/08 23:04:44
snew.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_TEXT  . . . . . . . . . . . . .	16 Bit	 01CF	  Word	  Public  'CODE'	
_DATA  . . . . . . . . . . . . .	16 Bit	 00F1	  Word	  Public  'DATA'	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0000h	 
@Model . . . . . . . . . . . . .	Number	 0001h	 
@Startup . . . . . . . . . . . .	L Near	 0100	  _TEXT	
@code  . . . . . . . . . . . . .	Text   	 DGROUP
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
ATXOff . . . . . . . . . . . . .	L Near	 0193	  _TEXT	
CrLf . . . . . . . . . . . . . .	Byte	 00CA	  _DATA	
DoAsk  . . . . . . . . . . . . .	L Near	 0113	  _TEXT	
DoCan  . . . . . . . . . . . . .	L Near	 018C	  _TEXT	
DoOffW . . . . . . . . . . . . .	L Near	 018A	  _TEXT	
DoOff  . . . . . . . . . . . . .	L Near	 0187	  _TEXT	
DoResW . . . . . . . . . . . . .	L Near	 017F	  _TEXT	
DoRes  . . . . . . . . . . . . .	L Near	 017C	  _TEXT	
Exit . . . . . . . . . . . . . .	L Near	 018F	  _TEXT	
FlushMsg1  . . . . . . . . . . .	Byte	 00CD	  _DATA	
FlushMsg2  . . . . . . . . . . .	Byte	 00EA	  _DATA	
FlushSD  . . . . . . . . . . . .	L Near	 01B8	  _TEXT	
KeyCan . . . . . . . . . . . . .	Byte	 00C8	  _DATA	
KeyEsc . . . . . . . . . . . . .	Byte	 00C9	  _DATA	
KeyOff . . . . . . . . . . . . .	Byte	 00C6	  _DATA	
KeyRes . . . . . . . . . . . . .	Byte	 00C7	  _DATA	
NoATX  . . . . . . . . . . . . .	Byte	 00A2	  _DATA	
NoPars . . . . . . . . . . . . .	L Near	 010C	  _TEXT	
NoWin  . . . . . . . . . . . . .	L Near	 0154	  _TEXT	
ParLoop  . . . . . . . . . . . .	L Near	 0167	  _TEXT	
Question . . . . . . . . . . . .	Byte	 007D	  _DATA	
ShowKey  . . . . . . . . . . . .	L Near	 0133	  _TEXT	
SyntaxTxt  . . . . . . . . . . .	Byte	 0053	  _DATA	
Syntax . . . . . . . . . . . . .	L Near	 0102	  _TEXT	
Txt  . . . . . . . . . . . . . .	Byte	 002C	  _DATA	
WinErr . . . . . . . . . . . . .	Byte	 0000	  _DATA	
realstart  . . . . . . . . . . .	L Near	 0141	  _TEXT	

	   0 Warnings
	   0 Errors
