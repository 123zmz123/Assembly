;*****************************************************************************
;*DOS下重新启动/关机的代码。也是一个简单的处理输入参数的例子                 *
;*                                                                           *
;*下面是文件的原始头信息                                                     *
;* ShutDown v1.2 written by BlackLight 2001                                  *
;* Download my other software from my website at www.blacklight.wxs.org      *
;* assemble this prog with the MAGIC ASSEMBLER by Magic Software Rotterdam   * 
;* Download it here (freeware):                                              *
;* http://www.math.leidenuniv.nl/~bgreeven                                   *
;* http://www.caiw.nl/~bert                                                  *
;*                                                                           *
;* What's new?                                                               *
;* v1.2 - added smartdrive flush                                             *
;* v1.1 - added command-line parameter support                               *
;* v1.0 - first version                                                      *
;*****************************************************************************
.model Tiny
.data
WinErr      db   'This program cannot be run under Windows.',0ah,0dh,'$'
Txt         db   'ShutDown v1.2 www.blacklight.wxs.org',0ah,0dh,'$'
SyntaxTxt   db   'Syntax: SHUTDOWN [S(hutdown)|R(estart)]',0ah,0dh,'$'
Question    db   'S(hutdown), R(estart), or C(ancel)? $'
NoATX       db   'Could not shutdown! No ATX maybe?$',0ah,0dh
KeyOff      db   'S'
KeyRes      db   'R'
KeyCan      db   'C'
KeyEsc      db   27
CrLf        db   0ah,0d,'$'
FlushMsg1   db   'Flushing SMARTDRV buffers...$'
FlushMsg2   db   'done',0ah,0dh,'$'
.code
.startup 
            jmp  realstart   
Syntax:     mov  ah,9h
            mov  dx,offset SyntaxTxt
            int  21h
            jmp  Exit

NoPars:     mov  ah,9h                     ;Show question
            mov  dx,offset(Question)
            int  21h

DoAsk:      xor  ah,ah                    ;Ask for key
            int  16h

            cmp  al,KeyEsc                ;Check if 'Esc'-key pressed
            je   DoCan
            and  al,0DFh                    ;convert AL to uppercase

            cmp  al,KeyOff                ;Check if 'S'-key pressed
            je   DoOff

            cmp  al,KeyRes                ;Check if 'R'-key pressed
            je   DoRes

            cmp  al,KeyCan                ;Check if 'C'-key pressed
            je   DoCan

            jmp DoAsk                   ;Invalid key pressed, ask again...

ShowKey:    mov  ah,2h                     ;Show the pressed key
            mov  dl,al
            int  21h
            mov  ah,9h                     ;Show CrLf
            mov  dx,offset(CrLf)
            int  21h
            ret                           ;return

realstart:
            mov  ax,160ah                  ;check for Windows
            int  2fh
            cmp  ax,0000
            jne  NoWin
            mov  dx,offset(WinErr)        ;print error message
            mov  ah,9h
            int  21h
            jmp  Exit
NoWin:      
            mov  ah,9h                     ;Show program name
            mov  dx,offset(Txt)
            int  21h

            mov  si,81h
            mov  al,[si]
            cmp  al,0Dh                ;Check if any parameters given
            jz   NoPars

            mov  si,81h                    ;get parameters
ParLoop:    lodsb
            cmp  al,0d                    ;if end reached with no result
            je   Syntax                  ;   show syntax
            and  al,0DFh                    ;convert AL to uppercase
            cmp  al,KeyOff                ;check for S parameter
            je   DoOffW
            cmp  al,KeyRes                ;check for R parameter
            je   DoResW
            jmp ParLoop                 ;not recognized,goto next char.

DoRes:      call ShowKey
DoResW:    call FlushSD
        db  0EAh
        dw  00000
        dw  0FFFFh            ; jmpf ffff:0000 this instruction will reboot the
                                          ;computer
DoOff:      call ShowKey
DoOffW:     jmp  ATXOff

DoCan:      call ShowKey
Exit:
.exit     ;exit to DOS


ATXOff:     call FlushSD                 ;flush smartdrive cache
            mov  ax,5301h           ;Function 5301h: APM ?Connect real-mode interface
            xor  bx,bx             ;Device ID:      0000h (=system BIOS)
            int  15h                ;Call interrupt: 15h

            mov  ax,530eh           ;Function 530Eh: APM ?Driver version
            mov  cx,0102h           ;Driver version: APM v1.2
            int  15h                ;Call interrupt: 15h

            mov  ax,5307h           ;Function 5307h: APM ?Set system power state
            mov  bl,01h             ;Device ID:      0001h (=All devices)
            mov  cx,0003h           ;Power State:    0003h (=Off)
            int  15h                ;Call interrupt: 15h

            ;if the program is still running here, there was an error...
            mov  ah,9h
            mov  dx,offset(NoATX)
            int  21h

            jmp Exit



FlushSD:    mov  ah,9h
            mov  dx,offset(FlushMsg1)
            int  21h
            mov  ax,4A10h       ;flush smartdrv/pccache buffers
            mov  bx,1h
            int  1Ah
            mov  ah,9h
            mov  dx,offset(FlushMsg2)
            int  21h
            ret
end
