; int __stdcall        FindCmEnumerateKey(wchar_t *wszModuleName,ULONG        *pfnCmEnumerateKey)
FindCmEnumerateKey proc        near                ; CODE XREF: VkInitialize+17Ap

wszKrnlFullPath        = word ptr -254h
IoStatusBlock        = _IO_STATUS_BLOCK ptr -4Ch
usKrnlFullPath        = UNICODE_STRING ptr -44h
ViewSize        = dword        ptr -3Ch
status                = dword        ptr -38h
ObjectAttributes= OBJECT_ATTRIBUTES ptr        -34h
hFile                = dword        ptr -1Ch
pfnNtEnumerateKey= dword ptr -18h
ulCmEnumerateKeyOffset=        dword ptr -14h
ulImageBase        = dword        ptr -10h
hSection        = dword        ptr -0Ch
dwKST                = dword        ptr -8
BaseAddress        = dword        ptr -4
wszModuleName        = dword        ptr  8
pfnCmEnumerateKey= dword ptr  0Ch

                push        ebp
                mov        ebp, esp
                sub        esp, 254h
                push        ebx
                push        esi
                push        edi
                xor        esi, esi
                mov        ecx, 81h
                xor        eax, eax
                lea        edi, [ebp+wszKrnlFullPath+2]
                cmp        [ebp+wszModuleName], esi
                mov        [ebp+wszKrnlFullPath], si
                mov        [ebp+BaseAddress], esi
                rep stosd
                mov        [ebp+ViewSize],        esi
                mov        [ebp+ulCmEnumerateKeyOffset], esi
                mov        [ebp+ulImageBase], esi
                mov        [ebp+dwKST], esi
                mov        [ebp+pfnNtEnumerateKey], esi
                stosw
                jz        error
                cmp        [ebp+pfnCmEnumerateKey], esi
                jz        error
                push        [ebp+wszModuleName]
                lea        eax, [ebp+wszKrnlFullPath]
                push        offset aSystemrootSyst ; "\\SystemRoot\\system32\\%s"
                push        eax                ; wchar_t *
                call        ds:swprintf
                add        esp, 0Ch
                lea        eax, [ebp+wszKrnlFullPath]
                push        eax                ; SourceString
                lea        eax, [ebp+usKrnlFullPath]
                push        eax                ; DestinationString
                call        ds:RtlInitUnicodeString
                push        size OBJECT_ATTRIBUTES
                lea        eax, [ebp+usKrnlFullPath]
                pop        ebx
                mov        [ebp+ObjectAttributes.ObjectName], eax
                push        OBJ_CASE_INSENSITIVE
                lea        eax, [ebp+IoStatusBlock]
                pop        edi
                mov        [ebp+ObjectAttributes.Length], ebx
                push        esi                ; EaLength
                push        esi                ; EaBuffer
                push        FILE_SYNCHRONOUS_IO_NONALERT ; CreateOptions
                push        FILE_OPEN_IF        ; CreateDisposition
                push        FILE_SHARE_READ        ; ShareAccess
                push        FILE_ATTRIBUTE_NORMAL ;        FileAttributes
                push        esi                ; AllocationSize
                push        eax                ; IoStatusBlock
                lea        eax, [ebp+ObjectAttributes]
                mov        [ebp+ObjectAttributes.RootDirectory], esi
                push        eax                ; ObjectAttributes
                lea        eax, [ebp+hFile]
                push        100020h                ; DesiredAccess
                push        eax                ; FileHandle
                mov        [ebp+ObjectAttributes.Attributes], edi
                mov        [ebp+ObjectAttributes.SecurityDescriptor], esi
                mov        [ebp+ObjectAttributes.SecurityQualityOfService], esi
                call        ds:ZwCreateFile
                cmp        eax, esi
                mov        [ebp+status], eax
                jge        short loc_11AA0
                push        eax
                push        offset aOpenFileNtoskr ; "Open file ntoskrnl.exe failed, status: "...
                call        DbgPrint
                mov        eax, [ebp+pfnCmEnumerateKey]
                pop        ecx
                pop        ecx
                mov        [eax], esi
                mov        eax, [ebp+status]
                jmp        loc_11C0A
; ---------------------------------------------------------------------------

loc_11AA0:                                ; CODE XREF: FindCmEnumerateKey+B8j
                push        [ebp+hFile]        ; FileHandle
                lea        eax, [ebp+ObjectAttributes]
                mov        [ebp+ObjectAttributes.Length], ebx
                mov        [ebp+ObjectAttributes.RootDirectory], esi
                push        SEC_IMAGE        ; Attributes
                push        PAGE_EXECUTE        ; Protect
                push        esi                ; SectionSize
                push        eax                ; ObjectAttributes
                lea        eax, [ebp+hSection]
                push        SECTION_ALL_ACCESS ; DesiredAccess
                push        eax                ; SectionHandle
                mov        [ebp+ObjectAttributes.Attributes], edi
                mov        [ebp+ObjectAttributes.ObjectName], esi
                mov        [ebp+ObjectAttributes.SecurityDescriptor], esi
                mov        [ebp+ObjectAttributes.SecurityQualityOfService], esi
                call        ds:ZwCreateSection
                mov        edi, eax
                cmp        edi, esi
                jge        short loc_11ADE
                push        edi
                push        offset aZwcreatesectio ; "ZwCreateSection() failed,status: %08x\n"
                jmp        short loc_11B0D
; ---------------------------------------------------------------------------

loc_11ADE:                                ; CODE XREF: FindCmEnumerateKey+108j
                push        PAGE_READWRITE        ; Protect
                push        MEM_TOP_DOWN        ; AllocationType
                lea        eax, [ebp+ViewSize]
                push        1                ; InheritDisposition
                push        eax                ; ViewSize
                push        esi                ; SectionOffset
                push        3E8h                ; CommitSize
                lea        eax, [ebp+BaseAddress]
                push        esi                ; ZeroBits
                push        eax                ; BaseAddress
                push        0FFFFFFFFh        ; ProcessHandle
                push        [ebp+hSection]        ; SectionHandle
                call        ds:ZwMapViewOfSection
                mov        edi, eax
                cmp        edi, esi
                jge        short loc_11B1B
                push        edi
                push        offset aZwmapviewofsec ; "ZwMapViewOfSection() failed,status: %08"...

loc_11B0D:                                ; CODE XREF: FindCmEnumerateKey+110j
                call        DbgPrint
                pop        ecx
                mov        eax, edi
                pop        ecx
                jmp        loc_11C0A
; ---------------------------------------------------------------------------

loc_11B1B:                                ; CODE XREF: FindCmEnumerateKey+139j
                push        [ebp+hFile]        ; Handle
                call        ds:ZwClose
                push        [ebp+BaseAddress]
                push        offset aBaseaddress08x ; "BaseAddress: %08X\n"
                call        DbgPrint
                pop        ecx
                lea        eax, [ebp+dwKST]
                pop        ecx
                push        eax                ; uKSTOffset
                push        [ebp+BaseAddress] ; uBaseAddr
                call        SearchKiServiceTable
                test        eax, eax
                jl        short loc_11B75
                push        [ebp+dwKST]
                push        offset aKiservicetable ; "KiServiceTable Offset: %08X\n"
                call        DbgPrint
                mov        eax, ds:ZwEnumerateKey
                pop        ecx
                pop        ecx
                push        dword ptr [eax+1] ; uIndex
                push        [ebp+dwKST]        ; uKST
                push        [ebp+BaseAddress] ; uBaseAddr
                call        VkGetProcAddress
                push        eax
                push        offset aNtenumeratekey ; "NtEnumerateKey in Map: %08X\n"
                mov        [ebp+pfnNtEnumerateKey], eax
                call        DbgPrint
                pop        ecx
                pop        ecx

loc_11B75:                                ; CODE XREF: FindCmEnumerateKey+175j
                lea        eax, [ebp+ulImageBase]
                push        eax                ; pulImageBase
                lea        eax, [ebp+ulCmEnumerateKeyOffset]
                push        eax                ; pulCmEnumerateKeyOffset
                push        [ebp+pfnNtEnumerateKey]        ; pfnApi
                push        [ebp+BaseAddress] ; uBaseAddr
                call        GetCmEnumerateKeyCallAddr
                test        eax, eax
                jl        short loc_11BE2
                mov        edi, [ebp+ulCmEnumerateKeyOffset]
                sub        edi, [ebp+ulImageBase]
                push        edi
                push        offset aFunctionOffset ; "Function offset: %08X\n"
                call        DbgPrint
                pop        ecx
                pop        ecx
                push        [ebp+wszModuleName] ; wszModuleName
                call        GetModuleBase
                mov        ebx, eax
                push        ebx
                push        offset aKernelbase08x ;        "KernelBase: %08x\n"
                call        DbgPrint
                pop        ecx
                cmp        ebx, esi
                pop        ecx
                jz        short loc_11BE2
                lea        esi, [edi+ebx]
                push        esi                ; esi -> Call CmEnumerateKey
                push        offset aCallCmenumerat ; "Call CmEnumerateKey -> %08x\n"
                call        DbgPrint
                mov        eax, [esi+1]
                lea        esi, [esi+eax+5] ; real        CmEnumerateKey
                push        esi
                push        offset aCmenumeratekey ; "CmEnumerateKey -> %08X\n"
                call        DbgPrint
                mov        eax, [ebp+pfnCmEnumerateKey]
                add        esp, 10h
                mov        [eax], esi

loc_11BE2:                                ; CODE XREF: FindCmEnumerateKey+1BEj
                                        ; FindCmEnumerateKey+1ECj
                push        [ebp+BaseAddress] ; BaseAddress
                push        0FFFFFFFFh        ; ProcessHandle
                call        ds:ZwUnmapViewOfSection
                push        [ebp+hSection]        ; Handle
                call        ds:ZwClose
                xor        eax, eax
                jmp        short loc_11C0A
; ---------------------------------------------------------------------------

error:                                        ; CODE XREF: FindCmEnumerateKey+3Bj
                                        ; FindCmEnumerateKey+44j
                push        offset aFindcmenumerat ; "FindCmEnumerateKey: pszModuleName or Ad"...
                call        DbgPrint
                pop        ecx
                mov        eax, STATUS_UNSUCCESSFUL

loc_11C0A:                                ; CODE XREF: FindCmEnumerateKey+CFj
                                        ; FindCmEnumerateKey+14Aj ...
                pop        edi
                pop        esi
                pop        ebx
                leave
                retn        8
FindCmEnumerateKey endp

; ---------------------------------------------------------------------------
                align 2
aThisFileIsNoEx        db 'This file is no execute.',0Ah,0
                                        ; DATA XREF: GetCmEnumerateKeyCallAddr+12o
                db 2 dup(0)
aIsnTPeFile_        db 'isn',27h,'t pe file.',0Ah,0 ; DATA XREF: GetCmEnumerateKeyCallAddr+29o
; char aSectionnameS[]
aSectionnameS        db 'SectionName: %s',0Ah,0 ; DATA XREF: GetCmEnumerateKeyCallAddr+4Fo
                align 10h
                db 2 dup(0)
aPage                db 'PAGE',0             ; DATA XREF: GetCmEnumerateKeyCallAddr+5Ao
                align 4
                db 2 dup(0)
; char aFindPageSectio[]
aFindPageSectio        db 'Find PAGE section.',0Ah,0 ; DATA XREF: GetCmEnumerateKeyCallAddr+69o
; char aFindCallCmenum[]
aFindCallCmenum        db 'Find Call CmEnumerateKey Offset: %08x',0Ah,0
                                        ; DATA XREF: GetCmEnumerateKeyCallAddr+10Co
                align 2
; char aFindInitSectio[]
aFindInitSectio        db 'Find INIT SECTION Failed.',0Ah,0
                                        ; DATA XREF: GetCmEnumerateKeyCallAddr:loc_11D9Fo

; *************** S U B        R O U T        I N E ***************************************

; Attributes: bp-based frame

; NTSTATUS __stdcall GetCmEnumerateKeyCallAddr(ULONG uBaseAddr,ULONG pfnApi,ULONG *pulCmEnumerateKeyOffset,ULONG *pulImageBase)
GetCmEnumerateKeyCallAddr proc near        ; CODE XREF: FindCmEnumerateKey+1B7p

i                = dword        ptr -8
var_4                = dword        ptr -4
uBaseAddr        = dword        ptr  8
pfnApi                = dword        ptr  0Ch
pulCmEnumerateKeyOffset= dword ptr  10h
pulImageBase        = dword        ptr  14h

                push        ebp
                mov        ebp, esp
                push        ecx
                push        ecx
                mov        eax, [ebp+uBaseAddr]
                push        ebx
                push        esi
                push        edi
                cmp        [eax+IMAGE_DOS_HEADER.e_magic],        'ZM'
                jz        short loc_11CCD
                push        offset aThisFileIsNoEx ; "This file is no execute.\n"
                jmp        loc_11DA4
; ---------------------------------------------------------------------------

loc_11CCD:                                ; CODE XREF: GetCmEnumerateKeyCallAddr+10j
                mov        ebx, [eax+IMAGE_DOS_HEADER.e_lfanew]
                add        ebx, eax
                cmp        [ebx+IMAGE_NT_HEADERS32.Signature], 'EP'
                jz        short loc_11CE4
                push        offset aIsnTPeFile_ ; "isn't pe file.\n"
                jmp        loc_11DA4
; ---------------------------------------------------------------------------

loc_11CE4:                                ; CODE XREF: GetCmEnumerateKeyCallAddr+27j
                and        [ebp+i], 0
                cmp        [ebx+IMAGE_NT_HEADERS32.FileHeader.NumberOfSections], 0
                lea        eax, [ebx+(size        IMAGE_NT_HEADERS32)]
                mov        [ebp+uBaseAddr], eax
                jbe        loc_11D9F

loc_11CFC:                                ; CODE XREF: GetCmEnumerateKeyCallAddr+E8j
                mov        esi, [ebp+uBaseAddr]
                push        esi
                push        offset aSectionnameS ; "SectionName: %s\n"
                call        DbgPrint
                pop        ecx
                mov        edi, offset aPage ; "PAGE"
                pop        ecx
                xor        eax, eax
                push        5
                pop        ecx
                repe cmpsb
                jnz        short loc_11D8B
                push        offset aFindPageSectio ; "Find PAGE section.\n"
                call        DbgPrint
                mov        eax, [ebp+uBaseAddr]
                mov        esi, [ebp+pfnApi]
                pop        ecx
                mov        edi, [eax+IMAGE_SECTION_HEADER.Misc.VirtualSize]
                test        edi, edi
                jbe        short loc_11D8B
                mov        eax, g_dwSigOffset
                mov        [ebp+var_4], 0FFFFFFFEh
                sub        [ebp+var_4], esi
                mov        cl, [eax]

loc_11D43:                                ; CODE XREF: GetCmEnumerateKeyCallAddr+D8j
                cmp        [esi], cl
                jnz        short loc_11D7F
                mov        dl, [esi+1]
                cmp        dl, [eax+1]
                jnz        short loc_11D7F
                mov        dl, [esi+2]
                cmp        dl, [eax+2]
                jnz        short loc_11D7F
                mov        dl, [esi+3]
                cmp        dl, [eax+3]
                jnz        short loc_11D7F
                mov        dl, [esi+4]
                cmp        dl, [eax+4]
                jnz        short loc_11D7F
                mov        dl, [esi+5]
                cmp        dl, [eax+5]
                jnz        short loc_11D7F
                mov        dl, [esi+6]
                cmp        dl, [eax+6]
                jnz        short loc_11D7F
                mov        dl, [esi+7]
                cmp        dl, [eax+7]
                jz        short loc_11DB6

loc_11D7F:                                ; CODE XREF: GetCmEnumerateKeyCallAddr+94j
                                        ; GetCmEnumerateKeyCallAddr+9Cj ...
                mov        edx, [ebp+var_4]
                inc        esi
                lea        edx, [edx+esi+2]
                cmp        edx, edi
                jb        short loc_11D43

loc_11D8B:                                ; CODE XREF: GetCmEnumerateKeyCallAddr+67j
                                        ; GetCmEnumerateKeyCallAddr+7Fj
                movzx        eax, [ebx+IMAGE_NT_HEADERS32.FileHeader.NumberOfSections]
                add        [ebp+uBaseAddr], size IMAGE_SECTION_HEADER
                inc        [ebp+i]
                cmp        [ebp+i], eax
                jl        loc_11CFC

loc_11D9F:                                ; CODE XREF: GetCmEnumerateKeyCallAddr+45j
                push        offset aFindInitSectio ; "Find INIT SECTION Failed.\n"

loc_11DA4:                                ; CODE XREF: GetCmEnumerateKeyCallAddr+17j
                                        ; GetCmEnumerateKeyCallAddr+2Ej
                call        DbgPrint
                pop        ecx
                mov        eax, STATUS_UNSUCCESSFUL

loc_11DAF:                                ; CODE XREF: GetCmEnumerateKeyCallAddr+127j
                pop        edi
                pop        esi
                pop        ebx
                leave
                retn        10h
; ---------------------------------------------------------------------------

loc_11DB6:                                ; CODE XREF: GetCmEnumerateKeyCallAddr+CCj
                add        esi, g_dwSig2CmEnumerateKeyOffset
                push        esi
                push        offset aFindCallCmenum ; "Find Call CmEnumerateKey Offset: %08x\n"
                call        DbgPrint
                mov        eax, [ebp+pulCmEnumerateKeyOffset]
                pop        ecx
                pop        ecx
                mov        ecx, [ebp+pulImageBase]
                mov        [eax], esi
                mov        eax, [ebx+IMAGE_NT_HEADERS32.OptionalHeader.ImageBase]
                mov        [ecx], eax
                xor        eax, eax
                jmp        short loc_11DAF
GetCmEnumerateKeyCallAddr endp

; ---------------------------------------------------------------------------
; char aFindRelocation[]
aFindRelocation        db 'Find relocation.',0Ah,0 ; DATA XREF: SearchKiServiceTable+3Co

; *************** S U B        R O U T        I N E ***************************************

; Attributes: bp-based frame

; int __stdcall        SearchKiServiceTable(ULONG uBaseAddr,ULONG *uKSTOffset)
SearchKiServiceTable proc near                ; CODE XREF: FindCmEnumerateKey+16Ep

var_C                = dword        ptr -0Ch
var_8                = dword        ptr -8
var_4                = dword        ptr -4
uBaseAddr        = dword        ptr  8
uKSTOffset        = dword        ptr  0Ch

                push        ebp
                mov        ebp, esp
                sub        esp, 0Ch
                push        ebx
                push        esi
                push        edi
                push        offset g_wszKrnlModuleName ; wszModuleName
                call        GetModuleBase
                test        eax, eax
                jz        loc_11EA1
                mov        ebx, [ebp+uBaseAddr]
                mov        ecx, ds:KeServiceDescriptorTable
                sub        ecx, eax
                mov        edi, [ebx+IMAGE_DOS_HEADER.e_lfanew]
                mov        [ebp+var_8], ecx
                add        edi, ebx
                mov        esi, [edi+(IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory.VirtualAddress+28h)]
                add        esi, ebx
                test        byte ptr [edi+IMAGE_NT_HEADERS32.FileHeader.Characteristics], 1
                jnz        short loc_11EA1
                push        offset aFindRelocation ; "Find relocation.\n"
                call        DbgPrint
                pop        ecx

loc_11E33:                                ; CODE XREF: SearchKiServiceTable+A3j
                mov        ecx, [esi+4]
                and        [ebp+var_4], 0
                lea        eax, [esi+8]
                mov        [ebp+uBaseAddr], eax
                lea        eax, [ecx-8]
                shr        eax, 1
                mov        [ebp+var_C], eax
                jz        short loc_11E88

loc_11E4A:                                ; CODE XREF: SearchKiServiceTable+9Aj
                mov        eax, [ebp+uBaseAddr]
                mov        ax, [eax]
                mov        edx, eax
                and        dx, 0F000h
                cmp        dx, 3000h
                jnz        short loc_11E79
                and        eax, 0FFFh
                add        eax, [esi]
                mov        edx, [eax+ebx]
                sub        edx, [edi+34h]
                cmp        edx, [ebp+var_8]
                jnz        short loc_11E79
                cmp        word ptr [eax+ebx-2], 5C7h
                jz        short loc_11E91

loc_11E79:                                ; CODE XREF: SearchKiServiceTable+70j
                                        ; SearchKiServiceTable+82j
                inc        [ebp+var_4]
                add        [ebp+uBaseAddr], 2
                mov        eax, [ebp+var_4]
                cmp        eax, [ebp+var_C]
                jb        short loc_11E4A

loc_11E88:                                ; CODE XREF: SearchKiServiceTable+5Cj
                add        esi, ecx
                cmp        dword ptr [esi], 0
                jz        short loc_11EA1
                jmp        short loc_11E33
; ---------------------------------------------------------------------------

loc_11E91:                                ; CODE XREF: SearchKiServiceTable+8Bj
                mov        eax, [eax+ebx+4]
                mov        ecx, [ebp+uKSTOffset]
                sub        eax, [edi+34h]
                mov        [ecx], eax
                xor        eax, eax
                jmp        short loc_11EA6
; ---------------------------------------------------------------------------

loc_11EA1:                                ; CODE XREF: SearchKiServiceTable+15j
                                        ; SearchKiServiceTable+3Aj ...
                mov        eax, STATUS_UNSUCCESSFUL

loc_11EA6:                                ; CODE XREF: SearchKiServiceTable+B3j
                pop        edi
                pop        esi
                pop        ebx
                leave
                retn        8
SearchKiServiceTable endp

; ---------------------------------------------------------------------------
                align 2

; *************** S U B        R O U T        I N E ***************************************

; Attributes: bp-based frame

; ULONG        __stdcall VkGetProcAddress(ULONG uBaseAddr,ULONG uKST,ULONG uIndex)
VkGetProcAddress proc near                ; CODE XREF: FindCmEnumerateKey+194p

uBaseAddr        = dword        ptr  8
uKST                = dword        ptr  0Ch
uIndex                = dword        ptr  10h

                push        ebp
                mov        ebp, esp
                mov        ecx, [ebp+uBaseAddr]
                mov        eax, [ebp+uIndex]
                push        esi
                mov        esi, [ebp+uKST]
                mov        edx, [ecx+IMAGE_DOS_HEADER.e_lfanew]
                lea        eax, [ecx+eax*4]
                mov        eax, [eax+esi]
                pop        esi
                sub        eax, [edx+ecx+IMAGE_NT_HEADERS32.OptionalHeader.ImageBase]
                add        eax, ecx
                pop        ebp
                retn        0Ch
VkGetProcAddress endp