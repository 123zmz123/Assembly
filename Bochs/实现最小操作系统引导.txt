第一创建磁盘映像文件img
	使用bximage命令
	选择fd
	选择1.44
	命名为a.img
	完成后会在当前目录下生成一个a.img文件,就是我们的软盘映像
所谓磁盘映像文件(Disk Image File)是软盘或硬盘上信息的一个完整映像，并以文件的形式保存。磁盘映像文件中存储信息的格式与对应磁盘上保存信息的格式完全一样。空磁盘映像文件是容量与我们创建的磁盘相同但内容全为0的一个文件。这些空磁盘映像文件就像刚买来的新软盘或硬盘，还需要经过分区及格式化才能使用
第二编写引导代码boot.asm
第三编译引导代码nasm boot.asm -o boot.bin
	编译完成后会在当前目录生成一个512字节的boot.bin文件，使用dd命令将它写进刚创建的软盘映像a.img的第一个扇区
第四向磁盘映像写入boot.bin
	使用命令dd if=boot.bin of=a.img bs=512 count=1 conv=notrunc
第五配置bochs启动环境参数
	在工程当前目录下创建bochsrc文件
	#################################################################
	# Bochs的配置文件
	# Configuration file for Bochs
	#################################################################

	# how much memory the emulated machine will have
	megs: 32

	# filenameof ROM images
	romimage:file=/usr/share/bochs/BIOS-bochs-latest
	vgaromimage:file=/usr/share/bochs/VGABIOS-lgpl-latest

	# which disk image will be used 这个是启动软盘，我们虚拟出来的那个a.img
	floppya:1_44=a.img, status=inserted

	# choose the boot disk 确定启动方式
	boot: floppy

	# where do we send log messages?
	log: bochsout.txt

	# disable the mouse
	mouse: enabled=0

	# enable key mapping ,using US layout as default
	keyboard:keymap=/usr/share/bochs/keymaps/x11-pc-us.map
########################################
在终端下输入bochs -f bochsrc将会运行虚拟机
出现无法打开虚拟机窗口的原因之一可能是没有安装bochs-x
sudo apt-get install bochs-x
当计算机电源被打开时,先进行加电自检,然后寻找启动盘,
如果选择从软盘启动,计算机就会检查软盘的0面0磁道1扇区,
如果发现它以0xaa55结束,则BIOS认为它是一个引导扇区,
正确的引导扇区除了以0xaa55结束之外,还应该包含一段少于512字节的执行码
一旦BIOS发现了引导扇区,就会将这512字节的内容装载到地址0000:7c00处,
然后跳转到0000:7c00处将控制权彻底交给这段引导代码,
到此为止,计算机不再由BIOS中固有的程序来控制,而变成由操作系统的一部分来控制
以下是引导代码
	org 07c00h;	告诉编译器程序加载到7c00块(内存偏移地址)0x7c00处
	mov ax,cs
	mov ds,ax
	mov es,ax
	call DispStr;	调用显示字符串例程
	jmp $;		无限循环
DispStr:
	mov ax,BootMessage
	mov bp,ax;	ES:BP=串地址
	mov cx,16;	CX=串长度
	mov ax,01301h;	AH=13,AL=01h
	mov bx,000ch;	页号为0(BH=0)黑底红字(BL=0Ch,高亮)
	mov dl,0
	int 10h;	10h号中断
	ret
BootMessage:	db "Hello,World!Operating System is running!"
times 510-($-$$)	db 0;	填充剩余空间使生成的二进制代码恰好为512字节
dw 0xaa55;		结束标志

程序主体只是第二行到第六行而已,程序2,3,4行使用三个mov指令,使ds/es两个段寄存器指向与cs相同的段,
以便在以后进行数据操作的时候能定位到正确的位置
第五行调用子程序显示字符串,然后jmp $;无限循环